#!/usr/bin/env bash

set -e

CONFIG=${CONFIG:-cluster_config.sh}
if [ ! -r "$CONFIG" ]; then
    echo "Could not find cluster configuration file."
    echo "Make sure $CONFIG file exists in the shiftstack-ci directory and that it is readable"
    exit 1
fi
source ${CONFIG}

set -x

declare -r installer="${OPENSHIFT_INSTALLER:-$GOPATH/src/github.com/openshift/installer/bin/openshift-install}"

# check whether we have a free floating IP
#FLOATING_IP=$(openstack floating ip list --status DOWN --network $OPENSTACK_EXTERNAL_NETWORK --long --format value -c "Floating IP Address" -c Description | sed 's/ .*//g')
#FLOATING_IP=$(echo $FLOATING_IP | cut -d ' ' -f1)

# create new floating ip if doesn't exist
#if [ -z "$FLOATING_IP" ]; then
#    FLOATING_IP=$(openstack floating ip create $OPENSTACK_EXTERNAL_NETWORK --description "${CLUSTER_NAME}-api" --format value --column floating_ip_address)
#fi

API_VIP=192.168.25.214
INGRESS_VIP=192.168.25.111

hosts="# Generated by shiftstack for $CLUSTER_NAME - Do not edit
$API_VIP api.${CLUSTER_NAME}.${BASE_DOMAIN}
$INGRESS_VIP console-openshift-console.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$INGRESS_VIP integrated-oauth-server-openshift-authentication.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$INGRESS_VIP oauth-openshift.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$INGRESS_VIP prometheus-k8s-openshift-monitoring.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$INGRESS_VIP grafana-openshift-monitoring.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
# End of $CLUSTER_NAME nodes"

old_hosts=$(awk "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/" /etc/hosts)

if [ "${hosts}" != "${old_hosts}" ]; then
  echo Updating hosts file
  sudo sed -i "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/d" /etc/hosts
  echo "$hosts" | sudo tee -a /etc/hosts
fi

ssh_config="# Generated by shiftstack for $CLUSTER_NAME - Do not edit
Host openshift-api-$CLUSTER_NAME
    Hostname $API_VIP
    User core
    Port 22
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
# End of $CLUSTER_NAME nodes"

if [ ! -f "$HOME/.ssh/config" ]; then
  touch "$HOME/.ssh/config"
  chmod 600 "$HOME/.ssh/config"
fi
old_ssh_config=$(awk "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/" $HOME/.ssh/config)
if [ "${ssh_config}" != "${old_ssh_config}" ]; then
  echo Updating ssh config file
  sed -i "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/d" $HOME/.ssh/config
  echo "$ssh_config" >>  $HOME/.ssh/config
fi

ARTIFACT_DIR=clusters/${CLUSTER_NAME}

rm -rf ${ARTIFACT_DIR}
mkdir -p ${ARTIFACT_DIR}

: "${OPENSTACK_WORKER_FLAVOR:=${OPENSTACK_FLAVOR}}"

MASTER_ROOT_VOLUME=""
if [[ ${OPENSTACK_MASTER_VOLUME_TYPE} != "" ]]; then
  MASTER_ROOT_VOLUME="rootVolume:
        size: ${OPENSTACK_MASTER_VOLUME_SIZE:-25}
        type: ${OPENSTACK_MASTER_VOLUME_TYPE}"
fi
WORKER_ROOT_VOLUME=""
if [[ ${OPENSTACK_WORKER_VOLUME_TYPE} != "" ]]; then
  WORKER_ROOT_VOLUME="rootVolume:
        size: ${OPENSTACK_WORKER_VOLUME_SIZE:-25}
        type: ${OPENSTACK_WORKER_VOLUME_TYPE}"
fi

if [ ! -f ${ARTIFACT_DIR}/install-config.yaml ]; then
    export CLUSTER_ID=$(uuidgen --random)
    cat > ${ARTIFACT_DIR}/install-config.yaml << EOF
apiVersion: v1
baseDomain: ${BASE_DOMAIN}
clusterID:  ${CLUSTER_ID}
compute:
- name: worker
  platform:
    openstack:
      type: ${OPENSTACK_WORKER_FLAVOR}
      ${WORKER_ROOT_VOLUME}
  replicas: ${WORKER_COUNT}
controlPlane:
  name: master
  platform:
    openstack:
      type: ${OPENSTACK_FLAVOR}
      ${MASTER_ROOT_VOLUME}
  replicas: ${MASTER_COUNT}
metadata:
  name: ${CLUSTER_NAME}
networking:
  machineNetwork:
  - cidr: 192.168.25.0/24
  networkType: OpenShiftSDN
platform:
  openstack:
    cloud:            ${OS_CLOUD}
    computeFlavor:    ${OPENSTACK_FLAVOR}
    apiVIP:           ${API_VIP}
    ingressVIP:       ${INGRESS_VIP}
    clusterOSImage:   rhcos-4.8
    machinesSubnet:   923c620a-7a9f-4977-8f7d-897e0385233b
pullSecret: |
  ${PULL_SECRET}
sshKey: |
  ${SSH_PUB_KEY}
EOF
fi



export OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE="quay.io/openshift-release-dev/ocp-release-nightly@sha256:51ee6bf27f88dcd7e8ba86df0b8c38ea0fa7660e8c46b569e9468d77f4d43704"

"$installer" --log-level=debug ${1:-create} ${2:-cluster} --dir ${ARTIFACT_DIR}
